/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.itson.bdavanzadas.banco;

import java.util.List;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import static org.itson.bdavanzadas.banco.LoginForm.logger;
import org.itson.bdavanzadas.bancodominio.Cliente;
import org.itson.bdavanzadas.bancodominio.Cuenta;
import org.itson.bdavanzadas.bancodominio.Transaccion;
import org.itson.bdavanzadas.bancopersistencia.dao.IClientesDAO;
import org.itson.bdavanzadas.bancopersistencia.excepciones.PersistenciaException;

/**
 *
 * @author Oliver Valle
 */
public class TransferenciaForm extends javax.swing.JFrame {

    IClientesDAO clientesDAO ;
    Cliente cliente ;
    long numCuentaSelec ;
    Cuenta cuentaSelec ;
    
    /**
     * Creates new form TransferenciaForm
     */
    public TransferenciaForm(IClientesDAO clientesDAO, Cliente cliente, Cuenta cuentaSelec) {
        initComponents();
        this.clientesDAO = clientesDAO ;
        this.cliente = cliente ;
        this.numCuentaSelec = cuentaSelec.getNumCuenta() ;
        this.cuentaSelec = cuentaSelec ;
    }
    
    public boolean validarEnteros() {
        try {
            int entero = Integer.parseInt(txtNumCuentaDest.getText());
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public boolean validarFlotantes() {
        try {
            float flotante = Float.parseFloat(txtMonto.getText());
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public boolean existeCuenta() {
        try {
            List<Cuenta> listaCuentas = clientesDAO.obtenerListaCuentas();
            for (Cuenta cuenta : listaCuentas) {
                if (cuenta.getNumCuenta() == Long.parseLong(txtNumCuentaDest.getText())) {
                    return true;
                }
            }

            return false;

        } catch (PersistenciaException e) {
            logger.log(Level.SEVERE, "No existe una cuenta destino coincidente", e);
        }

        return false;
    }

    public boolean verificarSaldoDisponible() {
        try {
            float saldoCliente = cuentaSelec.getSaldo();
            if (saldoCliente >= Float.parseFloat(txtMonto.getText())) {
                return true; // El saldo es suficiente
            } else {
                return false; // El saldo no es suficiente
            }

        } catch (NumberFormatException e) {
            logger.log(Level.SEVERE, "Error al verificar el saldo del cliente", e);
        }

        return false;
    }

    public boolean verificarNumerosPositivos() {
        try {
            float numero = Float.parseFloat(txtMonto.getText());
            if (numero >= 0) {
                return true; // Es un número positivo o cero
            } else {
                logger.log(Level.SEVERE, "Cifra inválida, no se permiten números negativos");
            }
        } catch (NumberFormatException e) {
            logger.log(Level.SEVERE, "Cifra inválida, no se permiten caracteres no numéricos", e);
        }

        return false;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblNumCuentaDest = new javax.swing.JLabel();
        txtNumCuentaDest = new javax.swing.JTextField();
        lblMonto = new javax.swing.JLabel();
        txtMonto = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        lblDescripcion = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Realiza tu transferencia");
        setResizable(false);

        lblTitulo.setText("Transferencia");

        lblNumCuentaDest.setText("No. Cuenta de Destinatario:");

        lblMonto.setText("Monto:");

        btnAceptar.setText("Confirmar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        lblDescripcion.setText("Escribe el numero de cuenta de Destino y el Monto a Transferir");

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lblNumCuentaDest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumCuentaDest, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(lblMonto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(btnAceptar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(39, 39, 39)
                            .addComponent(lblTitulo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVolver))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addComponent(lblDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitulo)
                    .addComponent(btnVolver))
                .addGap(29, 29, 29)
                .addComponent(lblDescripcion)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumCuentaDest)
                    .addComponent(txtNumCuentaDest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMonto)
                    .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addGap(38, 38, 38))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (!txtNumCuentaDest.getText().equals(String.valueOf(numCuentaSelec))) {
            try {
                // Realizar las validaciones adicionales
                if (txtMonto.getText().isBlank() || txtMonto.getText().isEmpty()
                        || txtNumCuentaDest.getText().isBlank() || txtNumCuentaDest.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Rellena los espacios en Blanco",
                            "Espacios en Blanco", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (!validarEnteros()) {
                    JOptionPane.showMessageDialog(this, "Ingresa valores enteros válidos",
                            "Error en Transferencia", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (!validarFlotantes()) {
                    JOptionPane.showMessageDialog(this, "Ingresa valores flotantes válidos",
                            "Error en Transferencia", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                int resp = JOptionPane.showConfirmDialog(this, "¿Quieres realizar la transferencia?", "Modificar datos",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                if (resp == 0) {
                    if (!existeCuenta()) {
                        JOptionPane.showMessageDialog(this, "La cuenta de destino no existe", "Error en Transferencia",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    if (!verificarNumerosPositivos()) {
                        JOptionPane.showMessageDialog(this, "No se pueden ingresar numeros negativos",
                                "Error en Transferencia", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    if (!verificarSaldoDisponible()) {
                        JOptionPane.showMessageDialog(this, "El saldo del cliente no es suficiente para la transferencia",
                                "Error en Transferencia", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    Transaccion transferencia = clientesDAO.agregarTransferencia(numCuentaSelec,
                            Long.parseLong(txtNumCuentaDest.getText()), Float.parseFloat(txtMonto.getText()));
                    transferencia = clientesDAO.aplicarTransferencia(transferencia.getFolio());
                    JOptionPane.showMessageDialog(this, "¡Se ha realizado la transferencia!", "Modificacion exitosa",
                            JOptionPane.INFORMATION_MESSAGE);
                    PantallaTransferenciaForm trans = new PantallaTransferenciaForm(clientesDAO, cliente, transferencia);
                    dispose();
                    trans.setVisible(true);

                }
            } catch (PersistenciaException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en Transferencia", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No puedes transferirte a ti mismo xD", "Error en Transferencia", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        dispose() ;
        MenuPrincipalForm menu = new MenuPrincipalForm(clientesDAO, cliente) ;
        menu.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TransferenciaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TransferenciaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TransferenciaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TransferenciaForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TransferenciaForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblMonto;
    private javax.swing.JLabel lblNumCuentaDest;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNumCuentaDest;
    // End of variables declaration//GEN-END:variables
}
